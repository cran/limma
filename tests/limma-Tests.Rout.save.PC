
R : Copyright 2004, The R Foundation for Statistical Computing
Version 1.9.1  (2004-06-21), ISBN 3-900051-00-3

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for a HTML browser interface to help.
Type 'q()' to quit R.

> library(limma)
> 
> set.seed(0); u <- runif(100)
> 
> ### splitName
> 
> x <- c("ab;cd;efg","abc;def","z","")
> splitName(x)
$Name
[1] "ab;cd" "abc"   "z"     ""     

$Annotation
[1] "efg" "def" ""    ""   

> 
> ### removeext
> 
> removeExt(c("slide1.spot","slide.2.spot"))
[1] "slide1"  "slide.2"
> removeExt(c("slide1.spot","slide"))
[1] "slide1.spot" "slide"      
> 
> ### printorder
> printorder(list(ngrid.r=4,ngrid.c=4,nspot.r=8,nspot.c=6),ndups=2,start="topright",npins=4)
$printorder
  [1]   6   5   4   3   2   1  12  11  10   9   8   7  18  17  16  15  14  13
 [19]  24  23  22  21  20  19  30  29  28  27  26  25  36  35  34  33  32  31
 [37]  42  41  40  39  38  37  48  47  46  45  44  43   6   5   4   3   2   1
 [55]  12  11  10   9   8   7  18  17  16  15  14  13  24  23  22  21  20  19
 [73]  30  29  28  27  26  25  36  35  34  33  32  31  42  41  40  39  38  37
 [91]  48  47  46  45  44  43   6   5   4   3   2   1  12  11  10   9   8   7
[109]  18  17  16  15  14  13  24  23  22  21  20  19  30  29  28  27  26  25
[127]  36  35  34  33  32  31  42  41  40  39  38  37  48  47  46  45  44  43
[145]   6   5   4   3   2   1  12  11  10   9   8   7  18  17  16  15  14  13
[163]  24  23  22  21  20  19  30  29  28  27  26  25  36  35  34  33  32  31
[181]  42  41  40  39  38  37  48  47  46  45  44  43  54  53  52  51  50  49
[199]  60  59  58  57  56  55  66  65  64  63  62  61  72  71  70  69  68  67
[217]  78  77  76  75  74  73  84  83  82  81  80  79  90  89  88  87  86  85
[235]  96  95  94  93  92  91  54  53  52  51  50  49  60  59  58  57  56  55
[253]  66  65  64  63  62  61  72  71  70  69  68  67  78  77  76  75  74  73
[271]  84  83  82  81  80  79  90  89  88  87  86  85  96  95  94  93  92  91
[289]  54  53  52  51  50  49  60  59  58  57  56  55  66  65  64  63  62  61
[307]  72  71  70  69  68  67  78  77  76  75  74  73  84  83  82  81  80  79
[325]  90  89  88  87  86  85  96  95  94  93  92  91  54  53  52  51  50  49
[343]  60  59  58  57  56  55  66  65  64  63  62  61  72  71  70  69  68  67
[361]  78  77  76  75  74  73  84  83  82  81  80  79  90  89  88  87  86  85
[379]  96  95  94  93  92  91 102 101 100  99  98  97 108 107 106 105 104 103
[397] 114 113 112 111 110 109 120 119 118 117 116 115 126 125 124 123 122 121
[415] 132 131 130 129 128 127 138 137 136 135 134 133 144 143 142 141 140 139
[433] 102 101 100  99  98  97 108 107 106 105 104 103 114 113 112 111 110 109
[451] 120 119 118 117 116 115 126 125 124 123 122 121 132 131 130 129 128 127
[469] 138 137 136 135 134 133 144 143 142 141 140 139 102 101 100  99  98  97
[487] 108 107 106 105 104 103 114 113 112 111 110 109 120 119 118 117 116 115
[505] 126 125 124 123 122 121 132 131 130 129 128 127 138 137 136 135 134 133
[523] 144 143 142 141 140 139 102 101 100  99  98  97 108 107 106 105 104 103
[541] 114 113 112 111 110 109 120 119 118 117 116 115 126 125 124 123 122 121
[559] 132 131 130 129 128 127 138 137 136 135 134 133 144 143 142 141 140 139
[577] 150 149 148 147 146 145 156 155 154 153 152 151 162 161 160 159 158 157
[595] 168 167 166 165 164 163 174 173 172 171 170 169 180 179 178 177 176 175
[613] 186 185 184 183 182 181 192 191 190 189 188 187 150 149 148 147 146 145
[631] 156 155 154 153 152 151 162 161 160 159 158 157 168 167 166 165 164 163
[649] 174 173 172 171 170 169 180 179 178 177 176 175 186 185 184 183 182 181
[667] 192 191 190 189 188 187 150 149 148 147 146 145 156 155 154 153 152 151
[685] 162 161 160 159 158 157 168 167 166 165 164 163 174 173 172 171 170 169
[703] 180 179 178 177 176 175 186 185 184 183 182 181 192 191 190 189 188 187
[721] 150 149 148 147 146 145 156 155 154 153 152 151 162 161 160 159 158 157
[739] 168 167 166 165 164 163 174 173 172 171 170 169 180 179 178 177 176 175
[757] 186 185 184 183 182 181 192 191 190 189 188 187

$plate
  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[445] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[667] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[704] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[741] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1

$plate.r
  [1]  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4
 [26]  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  4  3  3
 [51]  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3
 [76]  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  3  2  2  2  2
[101]  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2
[126]  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  1  1  1  1  1  1
[151]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
[176]  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  8  8  8  8  8  8  8  8
[201]  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8
[226]  8  8  8  8  8  8  8  8  8  8  8  8  8  8  8  7  7  7  7  7  7  7  7  7  7
[251]  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7  7
[276]  7  7  7  7  7  7  7  7  7  7  7  7  7  6  6  6  6  6  6  6  6  6  6  6  6
[301]  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6  6
[326]  6  6  6  6  6  6  6  6  6  6  6  5  5  5  5  5  5  5  5  5  5  5  5  5  5
[351]  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5  5
[376]  5  5  5  5  5  5  5  5  5 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12
[401] 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12
[426] 12 12 12 12 12 12 12 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11
[451] 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11
[476] 11 11 11 11 11 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10
[501] 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10
[526] 10 10 10  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9
[551]  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9  9
[576]  9 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16
[601] 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 16 15
[626] 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15
[651] 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 14 14 14
[676] 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14
[701] 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 13 13 13 13 13
[726] 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13
[751] 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13

$plate.c
  [1]  3  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15
 [26] 15 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3
 [51]  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14
 [76] 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2
[101]  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13
[126] 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2  1  1
[151]  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13 13 18
[176] 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2  1  1  6  6
[201]  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13 13 18 18 17
[226] 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2  1  1  6  6  5  5
[251]  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13 13 18 18 17 17 16
[276] 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2  1  1  6  6  5  5  4  4
[301]  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13 13 18 18 17 17 16 16 21
[326] 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2  1  1  6  6  5  5  4  4  9  9
[351]  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13 13 18 18 17 17 16 16 21 21 20
[376] 20 19 19 24 24 23 23 22 22  3  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8
[401]  7  7 12 12 11 11 10 10 15 15 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19
[426] 19 24 24 23 23 22 22  3  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7
[451] 12 12 11 11 10 10 15 15 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24
[476] 24 23 23 22 22  3  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12
[501] 11 11 10 10 15 15 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23
[526] 23 22 22  3  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11
[551] 10 10 15 15 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22
[576] 22  3  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10
[601] 15 15 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3
[626]  3  2  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15
[651] 14 14 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2
[676]  2  1  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14
[701] 13 13 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22  3  3  2  2  1
[726]  1  6  6  5  5  4  4  9  9  8  8  7  7 12 12 11 11 10 10 15 15 14 14 13 13
[751] 18 18 17 17 16 16 21 21 20 20 19 19 24 24 23 23 22 22

$plateposition
  [1] "p1D03" "p1D03" "p1D02" "p1D02" "p1D01" "p1D01" "p1D06" "p1D06" "p1D05"
 [10] "p1D05" "p1D04" "p1D04" "p1D09" "p1D09" "p1D08" "p1D08" "p1D07" "p1D07"
 [19] "p1D12" "p1D12" "p1D11" "p1D11" "p1D10" "p1D10" "p1D15" "p1D15" "p1D14"
 [28] "p1D14" "p1D13" "p1D13" "p1D18" "p1D18" "p1D17" "p1D17" "p1D16" "p1D16"
 [37] "p1D21" "p1D21" "p1D20" "p1D20" "p1D19" "p1D19" "p1D24" "p1D24" "p1D23"
 [46] "p1D23" "p1D22" "p1D22" "p1C03" "p1C03" "p1C02" "p1C02" "p1C01" "p1C01"
 [55] "p1C06" "p1C06" "p1C05" "p1C05" "p1C04" "p1C04" "p1C09" "p1C09" "p1C08"
 [64] "p1C08" "p1C07" "p1C07" "p1C12" "p1C12" "p1C11" "p1C11" "p1C10" "p1C10"
 [73] "p1C15" "p1C15" "p1C14" "p1C14" "p1C13" "p1C13" "p1C18" "p1C18" "p1C17"
 [82] "p1C17" "p1C16" "p1C16" "p1C21" "p1C21" "p1C20" "p1C20" "p1C19" "p1C19"
 [91] "p1C24" "p1C24" "p1C23" "p1C23" "p1C22" "p1C22" "p1B03" "p1B03" "p1B02"
[100] "p1B02" "p1B01" "p1B01" "p1B06" "p1B06" "p1B05" "p1B05" "p1B04" "p1B04"
[109] "p1B09" "p1B09" "p1B08" "p1B08" "p1B07" "p1B07" "p1B12" "p1B12" "p1B11"
[118] "p1B11" "p1B10" "p1B10" "p1B15" "p1B15" "p1B14" "p1B14" "p1B13" "p1B13"
[127] "p1B18" "p1B18" "p1B17" "p1B17" "p1B16" "p1B16" "p1B21" "p1B21" "p1B20"
[136] "p1B20" "p1B19" "p1B19" "p1B24" "p1B24" "p1B23" "p1B23" "p1B22" "p1B22"
[145] "p1A03" "p1A03" "p1A02" "p1A02" "p1A01" "p1A01" "p1A06" "p1A06" "p1A05"
[154] "p1A05" "p1A04" "p1A04" "p1A09" "p1A09" "p1A08" "p1A08" "p1A07" "p1A07"
[163] "p1A12" "p1A12" "p1A11" "p1A11" "p1A10" "p1A10" "p1A15" "p1A15" "p1A14"
[172] "p1A14" "p1A13" "p1A13" "p1A18" "p1A18" "p1A17" "p1A17" "p1A16" "p1A16"
[181] "p1A21" "p1A21" "p1A20" "p1A20" "p1A19" "p1A19" "p1A24" "p1A24" "p1A23"
[190] "p1A23" "p1A22" "p1A22" "p1H03" "p1H03" "p1H02" "p1H02" "p1H01" "p1H01"
[199] "p1H06" "p1H06" "p1H05" "p1H05" "p1H04" "p1H04" "p1H09" "p1H09" "p1H08"
[208] "p1H08" "p1H07" "p1H07" "p1H12" "p1H12" "p1H11" "p1H11" "p1H10" "p1H10"
[217] "p1H15" "p1H15" "p1H14" "p1H14" "p1H13" "p1H13" "p1H18" "p1H18" "p1H17"
[226] "p1H17" "p1H16" "p1H16" "p1H21" "p1H21" "p1H20" "p1H20" "p1H19" "p1H19"
[235] "p1H24" "p1H24" "p1H23" "p1H23" "p1H22" "p1H22" "p1G03" "p1G03" "p1G02"
[244] "p1G02" "p1G01" "p1G01" "p1G06" "p1G06" "p1G05" "p1G05" "p1G04" "p1G04"
[253] "p1G09" "p1G09" "p1G08" "p1G08" "p1G07" "p1G07" "p1G12" "p1G12" "p1G11"
[262] "p1G11" "p1G10" "p1G10" "p1G15" "p1G15" "p1G14" "p1G14" "p1G13" "p1G13"
[271] "p1G18" "p1G18" "p1G17" "p1G17" "p1G16" "p1G16" "p1G21" "p1G21" "p1G20"
[280] "p1G20" "p1G19" "p1G19" "p1G24" "p1G24" "p1G23" "p1G23" "p1G22" "p1G22"
[289] "p1F03" "p1F03" "p1F02" "p1F02" "p1F01" "p1F01" "p1F06" "p1F06" "p1F05"
[298] "p1F05" "p1F04" "p1F04" "p1F09" "p1F09" "p1F08" "p1F08" "p1F07" "p1F07"
[307] "p1F12" "p1F12" "p1F11" "p1F11" "p1F10" "p1F10" "p1F15" "p1F15" "p1F14"
[316] "p1F14" "p1F13" "p1F13" "p1F18" "p1F18" "p1F17" "p1F17" "p1F16" "p1F16"
[325] "p1F21" "p1F21" "p1F20" "p1F20" "p1F19" "p1F19" "p1F24" "p1F24" "p1F23"
[334] "p1F23" "p1F22" "p1F22" "p1E03" "p1E03" "p1E02" "p1E02" "p1E01" "p1E01"
[343] "p1E06" "p1E06" "p1E05" "p1E05" "p1E04" "p1E04" "p1E09" "p1E09" "p1E08"
[352] "p1E08" "p1E07" "p1E07" "p1E12" "p1E12" "p1E11" "p1E11" "p1E10" "p1E10"
[361] "p1E15" "p1E15" "p1E14" "p1E14" "p1E13" "p1E13" "p1E18" "p1E18" "p1E17"
[370] "p1E17" "p1E16" "p1E16" "p1E21" "p1E21" "p1E20" "p1E20" "p1E19" "p1E19"
[379] "p1E24" "p1E24" "p1E23" "p1E23" "p1E22" "p1E22" "p1L03" "p1L03" "p1L02"
[388] "p1L02" "p1L01" "p1L01" "p1L06" "p1L06" "p1L05" "p1L05" "p1L04" "p1L04"
[397] "p1L09" "p1L09" "p1L08" "p1L08" "p1L07" "p1L07" "p1L12" "p1L12" "p1L11"
[406] "p1L11" "p1L10" "p1L10" "p1L15" "p1L15" "p1L14" "p1L14" "p1L13" "p1L13"
[415] "p1L18" "p1L18" "p1L17" "p1L17" "p1L16" "p1L16" "p1L21" "p1L21" "p1L20"
[424] "p1L20" "p1L19" "p1L19" "p1L24" "p1L24" "p1L23" "p1L23" "p1L22" "p1L22"
[433] "p1K03" "p1K03" "p1K02" "p1K02" "p1K01" "p1K01" "p1K06" "p1K06" "p1K05"
[442] "p1K05" "p1K04" "p1K04" "p1K09" "p1K09" "p1K08" "p1K08" "p1K07" "p1K07"
[451] "p1K12" "p1K12" "p1K11" "p1K11" "p1K10" "p1K10" "p1K15" "p1K15" "p1K14"
[460] "p1K14" "p1K13" "p1K13" "p1K18" "p1K18" "p1K17" "p1K17" "p1K16" "p1K16"
[469] "p1K21" "p1K21" "p1K20" "p1K20" "p1K19" "p1K19" "p1K24" "p1K24" "p1K23"
[478] "p1K23" "p1K22" "p1K22" "p1J03" "p1J03" "p1J02" "p1J02" "p1J01" "p1J01"
[487] "p1J06" "p1J06" "p1J05" "p1J05" "p1J04" "p1J04" "p1J09" "p1J09" "p1J08"
[496] "p1J08" "p1J07" "p1J07" "p1J12" "p1J12" "p1J11" "p1J11" "p1J10" "p1J10"
[505] "p1J15" "p1J15" "p1J14" "p1J14" "p1J13" "p1J13" "p1J18" "p1J18" "p1J17"
[514] "p1J17" "p1J16" "p1J16" "p1J21" "p1J21" "p1J20" "p1J20" "p1J19" "p1J19"
[523] "p1J24" "p1J24" "p1J23" "p1J23" "p1J22" "p1J22" "p1I03" "p1I03" "p1I02"
[532] "p1I02" "p1I01" "p1I01" "p1I06" "p1I06" "p1I05" "p1I05" "p1I04" "p1I04"
[541] "p1I09" "p1I09" "p1I08" "p1I08" "p1I07" "p1I07" "p1I12" "p1I12" "p1I11"
[550] "p1I11" "p1I10" "p1I10" "p1I15" "p1I15" "p1I14" "p1I14" "p1I13" "p1I13"
[559] "p1I18" "p1I18" "p1I17" "p1I17" "p1I16" "p1I16" "p1I21" "p1I21" "p1I20"
[568] "p1I20" "p1I19" "p1I19" "p1I24" "p1I24" "p1I23" "p1I23" "p1I22" "p1I22"
[577] "p1P03" "p1P03" "p1P02" "p1P02" "p1P01" "p1P01" "p1P06" "p1P06" "p1P05"
[586] "p1P05" "p1P04" "p1P04" "p1P09" "p1P09" "p1P08" "p1P08" "p1P07" "p1P07"
[595] "p1P12" "p1P12" "p1P11" "p1P11" "p1P10" "p1P10" "p1P15" "p1P15" "p1P14"
[604] "p1P14" "p1P13" "p1P13" "p1P18" "p1P18" "p1P17" "p1P17" "p1P16" "p1P16"
[613] "p1P21" "p1P21" "p1P20" "p1P20" "p1P19" "p1P19" "p1P24" "p1P24" "p1P23"
[622] "p1P23" "p1P22" "p1P22" "p1O03" "p1O03" "p1O02" "p1O02" "p1O01" "p1O01"
[631] "p1O06" "p1O06" "p1O05" "p1O05" "p1O04" "p1O04" "p1O09" "p1O09" "p1O08"
[640] "p1O08" "p1O07" "p1O07" "p1O12" "p1O12" "p1O11" "p1O11" "p1O10" "p1O10"
[649] "p1O15" "p1O15" "p1O14" "p1O14" "p1O13" "p1O13" "p1O18" "p1O18" "p1O17"
[658] "p1O17" "p1O16" "p1O16" "p1O21" "p1O21" "p1O20" "p1O20" "p1O19" "p1O19"
[667] "p1O24" "p1O24" "p1O23" "p1O23" "p1O22" "p1O22" "p1N03" "p1N03" "p1N02"
[676] "p1N02" "p1N01" "p1N01" "p1N06" "p1N06" "p1N05" "p1N05" "p1N04" "p1N04"
[685] "p1N09" "p1N09" "p1N08" "p1N08" "p1N07" "p1N07" "p1N12" "p1N12" "p1N11"
[694] "p1N11" "p1N10" "p1N10" "p1N15" "p1N15" "p1N14" "p1N14" "p1N13" "p1N13"
[703] "p1N18" "p1N18" "p1N17" "p1N17" "p1N16" "p1N16" "p1N21" "p1N21" "p1N20"
[712] "p1N20" "p1N19" "p1N19" "p1N24" "p1N24" "p1N23" "p1N23" "p1N22" "p1N22"
[721] "p1M03" "p1M03" "p1M02" "p1M02" "p1M01" "p1M01" "p1M06" "p1M06" "p1M05"
[730] "p1M05" "p1M04" "p1M04" "p1M09" "p1M09" "p1M08" "p1M08" "p1M07" "p1M07"
[739] "p1M12" "p1M12" "p1M11" "p1M11" "p1M10" "p1M10" "p1M15" "p1M15" "p1M14"
[748] "p1M14" "p1M13" "p1M13" "p1M18" "p1M18" "p1M17" "p1M17" "p1M16" "p1M16"
[757] "p1M21" "p1M21" "p1M20" "p1M20" "p1M19" "p1M19" "p1M24" "p1M24" "p1M23"
[766] "p1M23" "p1M22" "p1M22"

> printorder(list(ngrid.r=4,ngrid.c=4,nspot.r=8,nspot.c=6))
$printorder
  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
 [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2
 [51]  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
 [76] 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4
[101]  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
[126] 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4  5  6
[151]  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
[176] 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4  5  6  7  8
[201]  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
[226] 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4  5  6  7  8  9 10
[251] 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
[276] 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4  5  6  7  8  9 10 11 12
[301] 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
[326] 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4  5  6  7  8  9 10 11 12 13 14
[351] 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
[376] 40 41 42 43 44 45 46 47 48  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
[401] 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
[426] 42 43 44 45 46 47 48  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18
[451] 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
[476] 44 45 46 47 48  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
[501] 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
[526] 46 47 48  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22
[551] 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
[576] 48  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
[601] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1
[626]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
[651] 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3
[676]  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
[701] 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  1  2  3  4  5
[726]  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
[751] 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48

$plate
  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2
 [38] 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2
 [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[112] 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1
[149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[186] 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2
[223] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[260] 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1
[297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[334] 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2
[371] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[408] 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1
[445] 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1
[482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[519] 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2
[556] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[593] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1
[630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
[667] 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2
[704] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[741] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2

$plate.r
  [1]  4  4  4  4  4  4  8  8  8  8  8  8 12 12 12 12 12 12 16 16 16 16 16 16  4
 [26]  4  4  4  4  4  8  8  8  8  8  8 12 12 12 12 12 12 16 16 16 16 16 16  3  3
 [51]  3  3  3  3  7  7  7  7  7  7 11 11 11 11 11 11 15 15 15 15 15 15  3  3  3
 [76]  3  3  3  7  7  7  7  7  7 11 11 11 11 11 11 15 15 15 15 15 15  2  2  2  2
[101]  2  2  6  6  6  6  6  6 10 10 10 10 10 10 14 14 14 14 14 14  2  2  2  2  2
[126]  2  6  6  6  6  6  6 10 10 10 10 10 10 14 14 14 14 14 14  1  1  1  1  1  1
[151]  5  5  5  5  5  5  9  9  9  9  9  9 13 13 13 13 13 13  1  1  1  1  1  1  5
[176]  5  5  5  5  5  9  9  9  9  9  9 13 13 13 13 13 13  4  4  4  4  4  4  8  8
[201]  8  8  8  8 12 12 12 12 12 12 16 16 16 16 16 16  4  4  4  4  4  4  8  8  8
[226]  8  8  8 12 12 12 12 12 12 16 16 16 16 16 16  3  3  3  3  3  3  7  7  7  7
[251]  7  7 11 11 11 11 11 11 15 15 15 15 15 15  3  3  3  3  3  3  7  7  7  7  7
[276]  7 11 11 11 11 11 11 15 15 15 15 15 15  2  2  2  2  2  2  6  6  6  6  6  6
[301] 10 10 10 10 10 10 14 14 14 14 14 14  2  2  2  2  2  2  6  6  6  6  6  6 10
[326] 10 10 10 10 10 14 14 14 14 14 14  1  1  1  1  1  1  5  5  5  5  5  5  9  9
[351]  9  9  9  9 13 13 13 13 13 13  1  1  1  1  1  1  5  5  5  5  5  5  9  9  9
[376]  9  9  9 13 13 13 13 13 13  4  4  4  4  4  4  8  8  8  8  8  8 12 12 12 12
[401] 12 12 16 16 16 16 16 16  4  4  4  4  4  4  8  8  8  8  8  8 12 12 12 12 12
[426] 12 16 16 16 16 16 16  3  3  3  3  3  3  7  7  7  7  7  7 11 11 11 11 11 11
[451] 15 15 15 15 15 15  3  3  3  3  3  3  7  7  7  7  7  7 11 11 11 11 11 11 15
[476] 15 15 15 15 15  2  2  2  2  2  2  6  6  6  6  6  6 10 10 10 10 10 10 14 14
[501] 14 14 14 14  2  2  2  2  2  2  6  6  6  6  6  6 10 10 10 10 10 10 14 14 14
[526] 14 14 14  1  1  1  1  1  1  5  5  5  5  5  5  9  9  9  9  9  9 13 13 13 13
[551] 13 13  1  1  1  1  1  1  5  5  5  5  5  5  9  9  9  9  9  9 13 13 13 13 13
[576] 13  4  4  4  4  4  4  8  8  8  8  8  8 12 12 12 12 12 12 16 16 16 16 16 16
[601]  4  4  4  4  4  4  8  8  8  8  8  8 12 12 12 12 12 12 16 16 16 16 16 16  3
[626]  3  3  3  3  3  7  7  7  7  7  7 11 11 11 11 11 11 15 15 15 15 15 15  3  3
[651]  3  3  3  3  7  7  7  7  7  7 11 11 11 11 11 11 15 15 15 15 15 15  2  2  2
[676]  2  2  2  6  6  6  6  6  6 10 10 10 10 10 10 14 14 14 14 14 14  2  2  2  2
[701]  2  2  6  6  6  6  6  6 10 10 10 10 10 10 14 14 14 14 14 14  1  1  1  1  1
[726]  1  5  5  5  5  5  5  9  9  9  9  9  9 13 13 13 13 13 13  1  1  1  1  1  1
[751]  5  5  5  5  5  5  9  9  9  9  9  9 13 13 13 13 13 13

$plate.c
  [1]  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1
 [26]  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5
 [51]  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9
 [76] 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13
[101] 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17
[126] 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21
[151]  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  1
[176]  5  9 13 17 21  1  5  9 13 17 21  1  5  9 13 17 21  2  6 10 14 18 22  2  6
[201] 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10
[226] 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14
[251] 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18
[276] 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22
[301]  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2
[326]  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6
[351] 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10 14 18 22  2  6 10
[376] 14 18 22  2  6 10 14 18 22  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15
[401] 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19
[426] 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23
[451]  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3
[476]  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7
[501] 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11
[526] 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15
[551] 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19 23  3  7 11 15 19
[576] 23  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24
[601]  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4
[626]  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8
[651] 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12
[676] 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16
[701] 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20
[726] 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24
[751]  4  8 12 16 20 24  4  8 12 16 20 24  4  8 12 16 20 24

$plateposition
  [1] "p1D01" "p1D05" "p1D09" "p1D13" "p1D17" "p1D21" "p1H01" "p1H05" "p1H09"
 [10] "p1H13" "p1H17" "p1H21" "p1L01" "p1L05" "p1L09" "p1L13" "p1L17" "p1L21"
 [19] "p1P01" "p1P05" "p1P09" "p1P13" "p1P17" "p1P21" "p2D01" "p2D05" "p2D09"
 [28] "p2D13" "p2D17" "p2D21" "p2H01" "p2H05" "p2H09" "p2H13" "p2H17" "p2H21"
 [37] "p2L01" "p2L05" "p2L09" "p2L13" "p2L17" "p2L21" "p2P01" "p2P05" "p2P09"
 [46] "p2P13" "p2P17" "p2P21" "p1C01" "p1C05" "p1C09" "p1C13" "p1C17" "p1C21"
 [55] "p1G01" "p1G05" "p1G09" "p1G13" "p1G17" "p1G21" "p1K01" "p1K05" "p1K09"
 [64] "p1K13" "p1K17" "p1K21" "p1O01" "p1O05" "p1O09" "p1O13" "p1O17" "p1O21"
 [73] "p2C01" "p2C05" "p2C09" "p2C13" "p2C17" "p2C21" "p2G01" "p2G05" "p2G09"
 [82] "p2G13" "p2G17" "p2G21" "p2K01" "p2K05" "p2K09" "p2K13" "p2K17" "p2K21"
 [91] "p2O01" "p2O05" "p2O09" "p2O13" "p2O17" "p2O21" "p1B01" "p1B05" "p1B09"
[100] "p1B13" "p1B17" "p1B21" "p1F01" "p1F05" "p1F09" "p1F13" "p1F17" "p1F21"
[109] "p1J01" "p1J05" "p1J09" "p1J13" "p1J17" "p1J21" "p1N01" "p1N05" "p1N09"
[118] "p1N13" "p1N17" "p1N21" "p2B01" "p2B05" "p2B09" "p2B13" "p2B17" "p2B21"
[127] "p2F01" "p2F05" "p2F09" "p2F13" "p2F17" "p2F21" "p2J01" "p2J05" "p2J09"
[136] "p2J13" "p2J17" "p2J21" "p2N01" "p2N05" "p2N09" "p2N13" "p2N17" "p2N21"
[145] "p1A01" "p1A05" "p1A09" "p1A13" "p1A17" "p1A21" "p1E01" "p1E05" "p1E09"
[154] "p1E13" "p1E17" "p1E21" "p1I01" "p1I05" "p1I09" "p1I13" "p1I17" "p1I21"
[163] "p1M01" "p1M05" "p1M09" "p1M13" "p1M17" "p1M21" "p2A01" "p2A05" "p2A09"
[172] "p2A13" "p2A17" "p2A21" "p2E01" "p2E05" "p2E09" "p2E13" "p2E17" "p2E21"
[181] "p2I01" "p2I05" "p2I09" "p2I13" "p2I17" "p2I21" "p2M01" "p2M05" "p2M09"
[190] "p2M13" "p2M17" "p2M21" "p1D02" "p1D06" "p1D10" "p1D14" "p1D18" "p1D22"
[199] "p1H02" "p1H06" "p1H10" "p1H14" "p1H18" "p1H22" "p1L02" "p1L06" "p1L10"
[208] "p1L14" "p1L18" "p1L22" "p1P02" "p1P06" "p1P10" "p1P14" "p1P18" "p1P22"
[217] "p2D02" "p2D06" "p2D10" "p2D14" "p2D18" "p2D22" "p2H02" "p2H06" "p2H10"
[226] "p2H14" "p2H18" "p2H22" "p2L02" "p2L06" "p2L10" "p2L14" "p2L18" "p2L22"
[235] "p2P02" "p2P06" "p2P10" "p2P14" "p2P18" "p2P22" "p1C02" "p1C06" "p1C10"
[244] "p1C14" "p1C18" "p1C22" "p1G02" "p1G06" "p1G10" "p1G14" "p1G18" "p1G22"
[253] "p1K02" "p1K06" "p1K10" "p1K14" "p1K18" "p1K22" "p1O02" "p1O06" "p1O10"
[262] "p1O14" "p1O18" "p1O22" "p2C02" "p2C06" "p2C10" "p2C14" "p2C18" "p2C22"
[271] "p2G02" "p2G06" "p2G10" "p2G14" "p2G18" "p2G22" "p2K02" "p2K06" "p2K10"
[280] "p2K14" "p2K18" "p2K22" "p2O02" "p2O06" "p2O10" "p2O14" "p2O18" "p2O22"
[289] "p1B02" "p1B06" "p1B10" "p1B14" "p1B18" "p1B22" "p1F02" "p1F06" "p1F10"
[298] "p1F14" "p1F18" "p1F22" "p1J02" "p1J06" "p1J10" "p1J14" "p1J18" "p1J22"
[307] "p1N02" "p1N06" "p1N10" "p1N14" "p1N18" "p1N22" "p2B02" "p2B06" "p2B10"
[316] "p2B14" "p2B18" "p2B22" "p2F02" "p2F06" "p2F10" "p2F14" "p2F18" "p2F22"
[325] "p2J02" "p2J06" "p2J10" "p2J14" "p2J18" "p2J22" "p2N02" "p2N06" "p2N10"
[334] "p2N14" "p2N18" "p2N22" "p1A02" "p1A06" "p1A10" "p1A14" "p1A18" "p1A22"
[343] "p1E02" "p1E06" "p1E10" "p1E14" "p1E18" "p1E22" "p1I02" "p1I06" "p1I10"
[352] "p1I14" "p1I18" "p1I22" "p1M02" "p1M06" "p1M10" "p1M14" "p1M18" "p1M22"
[361] "p2A02" "p2A06" "p2A10" "p2A14" "p2A18" "p2A22" "p2E02" "p2E06" "p2E10"
[370] "p2E14" "p2E18" "p2E22" "p2I02" "p2I06" "p2I10" "p2I14" "p2I18" "p2I22"
[379] "p2M02" "p2M06" "p2M10" "p2M14" "p2M18" "p2M22" "p1D03" "p1D07" "p1D11"
[388] "p1D15" "p1D19" "p1D23" "p1H03" "p1H07" "p1H11" "p1H15" "p1H19" "p1H23"
[397] "p1L03" "p1L07" "p1L11" "p1L15" "p1L19" "p1L23" "p1P03" "p1P07" "p1P11"
[406] "p1P15" "p1P19" "p1P23" "p2D03" "p2D07" "p2D11" "p2D15" "p2D19" "p2D23"
[415] "p2H03" "p2H07" "p2H11" "p2H15" "p2H19" "p2H23" "p2L03" "p2L07" "p2L11"
[424] "p2L15" "p2L19" "p2L23" "p2P03" "p2P07" "p2P11" "p2P15" "p2P19" "p2P23"
[433] "p1C03" "p1C07" "p1C11" "p1C15" "p1C19" "p1C23" "p1G03" "p1G07" "p1G11"
[442] "p1G15" "p1G19" "p1G23" "p1K03" "p1K07" "p1K11" "p1K15" "p1K19" "p1K23"
[451] "p1O03" "p1O07" "p1O11" "p1O15" "p1O19" "p1O23" "p2C03" "p2C07" "p2C11"
[460] "p2C15" "p2C19" "p2C23" "p2G03" "p2G07" "p2G11" "p2G15" "p2G19" "p2G23"
[469] "p2K03" "p2K07" "p2K11" "p2K15" "p2K19" "p2K23" "p2O03" "p2O07" "p2O11"
[478] "p2O15" "p2O19" "p2O23" "p1B03" "p1B07" "p1B11" "p1B15" "p1B19" "p1B23"
[487] "p1F03" "p1F07" "p1F11" "p1F15" "p1F19" "p1F23" "p1J03" "p1J07" "p1J11"
[496] "p1J15" "p1J19" "p1J23" "p1N03" "p1N07" "p1N11" "p1N15" "p1N19" "p1N23"
[505] "p2B03" "p2B07" "p2B11" "p2B15" "p2B19" "p2B23" "p2F03" "p2F07" "p2F11"
[514] "p2F15" "p2F19" "p2F23" "p2J03" "p2J07" "p2J11" "p2J15" "p2J19" "p2J23"
[523] "p2N03" "p2N07" "p2N11" "p2N15" "p2N19" "p2N23" "p1A03" "p1A07" "p1A11"
[532] "p1A15" "p1A19" "p1A23" "p1E03" "p1E07" "p1E11" "p1E15" "p1E19" "p1E23"
[541] "p1I03" "p1I07" "p1I11" "p1I15" "p1I19" "p1I23" "p1M03" "p1M07" "p1M11"
[550] "p1M15" "p1M19" "p1M23" "p2A03" "p2A07" "p2A11" "p2A15" "p2A19" "p2A23"
[559] "p2E03" "p2E07" "p2E11" "p2E15" "p2E19" "p2E23" "p2I03" "p2I07" "p2I11"
[568] "p2I15" "p2I19" "p2I23" "p2M03" "p2M07" "p2M11" "p2M15" "p2M19" "p2M23"
[577] "p1D04" "p1D08" "p1D12" "p1D16" "p1D20" "p1D24" "p1H04" "p1H08" "p1H12"
[586] "p1H16" "p1H20" "p1H24" "p1L04" "p1L08" "p1L12" "p1L16" "p1L20" "p1L24"
[595] "p1P04" "p1P08" "p1P12" "p1P16" "p1P20" "p1P24" "p2D04" "p2D08" "p2D12"
[604] "p2D16" "p2D20" "p2D24" "p2H04" "p2H08" "p2H12" "p2H16" "p2H20" "p2H24"
[613] "p2L04" "p2L08" "p2L12" "p2L16" "p2L20" "p2L24" "p2P04" "p2P08" "p2P12"
[622] "p2P16" "p2P20" "p2P24" "p1C04" "p1C08" "p1C12" "p1C16" "p1C20" "p1C24"
[631] "p1G04" "p1G08" "p1G12" "p1G16" "p1G20" "p1G24" "p1K04" "p1K08" "p1K12"
[640] "p1K16" "p1K20" "p1K24" "p1O04" "p1O08" "p1O12" "p1O16" "p1O20" "p1O24"
[649] "p2C04" "p2C08" "p2C12" "p2C16" "p2C20" "p2C24" "p2G04" "p2G08" "p2G12"
[658] "p2G16" "p2G20" "p2G24" "p2K04" "p2K08" "p2K12" "p2K16" "p2K20" "p2K24"
[667] "p2O04" "p2O08" "p2O12" "p2O16" "p2O20" "p2O24" "p1B04" "p1B08" "p1B12"
[676] "p1B16" "p1B20" "p1B24" "p1F04" "p1F08" "p1F12" "p1F16" "p1F20" "p1F24"
[685] "p1J04" "p1J08" "p1J12" "p1J16" "p1J20" "p1J24" "p1N04" "p1N08" "p1N12"
[694] "p1N16" "p1N20" "p1N24" "p2B04" "p2B08" "p2B12" "p2B16" "p2B20" "p2B24"
[703] "p2F04" "p2F08" "p2F12" "p2F16" "p2F20" "p2F24" "p2J04" "p2J08" "p2J12"
[712] "p2J16" "p2J20" "p2J24" "p2N04" "p2N08" "p2N12" "p2N16" "p2N20" "p2N24"
[721] "p1A04" "p1A08" "p1A12" "p1A16" "p1A20" "p1A24" "p1E04" "p1E08" "p1E12"
[730] "p1E16" "p1E20" "p1E24" "p1I04" "p1I08" "p1I12" "p1I16" "p1I20" "p1I24"
[739] "p1M04" "p1M08" "p1M12" "p1M16" "p1M20" "p1M24" "p2A04" "p2A08" "p2A12"
[748] "p2A16" "p2A20" "p2A24" "p2E04" "p2E08" "p2E12" "p2E16" "p2E20" "p2E24"
[757] "p2I04" "p2I08" "p2I12" "p2I16" "p2I20" "p2I24" "p2M04" "p2M08" "p2M12"
[766] "p2M16" "p2M20" "p2M24"

> 
> ### merge.rglist
> 
> R <- G <- matrix(11:14,4,2)
> rownames(R) <- rownames(G) <- c("a","a","b","c")
> RG1 <- new("RGList",list(R=R,G=G))
> R <- G <- matrix(21:24,4,2)
> rownames(R) <- rownames(G) <- c("b","a","a","c")
> RG2 <- new("RGList",list(R=R,G=G))
> merge(RG1,RG2)
An object of class "RGList"
$R
  [,1] [,2] [,3] [,4]
a   11   11   22   22
a   12   12   23   23
b   13   13   21   21
c   14   14   24   24

$G
  [,1] [,2] [,3] [,4]
a   11   11   22   22
a   12   12   23   23
b   13   13   21   21
c   14   14   24   24

> merge(RG2,RG1)
An object of class "RGList"
$R
  [,1] [,2] [,3] [,4]
b   21   21   13   13
a   22   22   11   11
a   23   23   12   12
c   24   24   14   14

$G
  [,1] [,2] [,3] [,4]
b   21   21   13   13
a   22   22   11   11
a   23   23   12   12
c   24   24   14   14

> 
> ### background correction
> RG <- new("RGList", list(R=c(1,2,3,4),G=c(1,2,3,4),Rb=c(2,2,2,2),Gb=c(2,2,2,2)))
> backgroundCorrect(RG)
An object of class "RGList"
$R
[1] -1  0  1  2

$G
[1] -1  0  1  2

> backgroundCorrect(RG, method="half")
An object of class "RGList"
$R
[1] 0.5 0.5 1.0 2.0

$G
[1] 0.5 0.5 1.0 2.0

> backgroundCorrect(RG, method="minimum")
An object of class "RGList"
$R
     [,1]
[1,]  0.5
[2,]  0.5
[3,]  1.0
[4,]  2.0

$G
     [,1]
[1,]  0.5
[2,]  0.5
[3,]  1.0
[4,]  2.0

> backgroundCorrect(RG, offset=5)
An object of class "RGList"
$R
[1] 4 5 6 7

$G
[1] 4 5 6 7

> 
> ### normalizeWithinArrays
> 
> library(sma)
> data(MouseArray)
> MA <- normalizeWithinArrays(mouse.data, mouse.setup, method="robustspline")
Loading required package: MASS 
Loading required package: splines 
> MA$M[1:5,]
            [,1]        [,2]        [,3]        [,4]       [,5]        [,6]
[1,] -0.21539109 -0.79670669 -0.55011008  0.14243756 -0.3933328  0.86741957
[2,]  0.06449435  0.16873653  0.26020426  0.92440874  0.6640048  1.30672583
[3,] -0.23149571 -0.66662065 -0.68092134 -0.09651125 -0.4205728 -0.31124721
[4,] -0.20090146 -0.09709476 -0.28354313  0.32830186  0.1916112 -0.09738907
[5,] -0.86822005 -0.13192148 -0.08634807 -0.01017014  0.2763200 -0.22570480
> MA <- normalizeWithinArrays(mouse.data, mouse.setup)
> MA$M[1:5,]
            [,1]        [,2]        [,3]        [,4]       [,5]       [,6]
[1,] -0.22006681 -0.85229101 -0.61528102  0.07080387 -0.4017245  0.8790516
[2,]  0.06720908  0.11711457  0.21083609  0.99616190  0.6494259  1.3351120
[3,] -0.23069447 -0.71229077 -0.72631373 -0.12375213 -0.4262350 -0.3237170
[4,] -0.17262990 -0.06186499 -0.28347377  0.27201473  0.2028371 -0.1018497
[5,] -0.83900000 -0.09643457 -0.08877846 -0.06550247  0.2807478 -0.2229941
> 
> ### normalizeBetweenArrays
> 
> MA <- normalizeBetweenArrays(MA,method="scale")
> MA$M[1:5,]
            [,1]        [,2]       [,3]        [,4]       [,5]       [,6]
[1,] -0.22060913 -0.97047013 -0.7132995  0.05299212 -0.4035381  0.8835727
[2,]  0.06737471  0.13335374  0.2444237  0.74556284  0.6523577  1.3419787
[3,] -0.23126298 -0.81105738 -0.8420205 -0.09262048 -0.4281592 -0.3253819
[4,] -0.17305532 -0.07044322 -0.3286331  0.20358545  0.2037528 -0.1023735
[5,] -0.84106756 -0.10980624 -0.1029215 -0.04902437  0.2820152 -0.2241410
> MA$A[1:5,]
          [,1]      [,2]      [,3]      [,4]      [,5]      [,6]
[1,] 11.332980 11.198841 11.337353  9.693899 11.196822 10.506374
[2,] 11.245664 11.074098 11.051345 10.931562 11.273305 10.008818
[3,] 10.113995 10.923628 12.322088  9.875351 11.096463 10.829522
[4,]  8.390963  9.019036  8.720987  9.774672  8.826249  9.113240
[5,]  8.684837  9.017042  8.406961  9.477079  8.739632  8.557627
> MA <- normalizeBetweenArrays(MA,method="quantile")
> MA$M[1:5,]
            [,1]       [,2]       [,3]        [,4]       [,5]       [,6]
[1,] -0.31703694 -0.9938725 -0.5791881  0.03617137 -0.3769488  0.9820991
[2,]  0.03923233  0.1066559  0.2312904  0.76612052  0.6368203  1.4728996
[3,] -0.27566044 -0.8580353 -0.7504079 -0.08854074 -0.4200884 -0.2960210
[4,] -0.11946685 -0.1095793 -0.2985336  0.15876207  0.2612499 -0.1006169
[5,] -0.67628732 -0.1634459 -0.0938785 -0.05338925  0.3477450 -0.2227479
> MA$A[1:5,]
          [,1]      [,2]      [,3]      [,4]      [,5]     [,6]
[1,] 11.478807 11.311915 11.142829  9.749722 11.137385 10.56415
[2,] 11.369349 11.191410 10.896307 10.893490 11.205219 10.04138
[3,] 10.124225 11.010219 12.026393  9.906701 11.045121 10.91363
[4,]  8.521087  8.771148  8.810923  9.817860  8.681051  9.06633
[5,]  8.772261  8.766051  8.538890  9.580934  8.567045  8.55471
> 
> ### unwrapdups
> 
> M <- matrix(1:12,6,2)
> unwrapdups(M,ndups=1)
     [,1] [,2]
[1,]    1    7
[2,]    2    8
[3,]    3    9
[4,]    4   10
[5,]    5   11
[6,]    6   12
> unwrapdups(M,ndups=2)
     [,1] [,2] [,3] [,4]
[1,]    1    2    7    8
[2,]    3    4    9   10
[3,]    5    6   11   12
> unwrapdups(M,ndups=3)
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    1    2    3    7    8    9
[2,]    4    5    6   10   11   12
> unwrapdups(M,ndups=2,spacing=3)
     [,1] [,2] [,3] [,4]
[1,]    1    4    7   10
[2,]    2    5    8   11
[3,]    3    6    9   12
> 
> ### trigammaInverse
> 
> trigammaInverse(c(1e-6,NA,5,1e6))
[1] 1.000000e+06           NA 4.961687e-01 1.000001e-03
> 
> ### lm.series, contrasts.fit, ebayes
> 
> M <- matrix(rnorm(10*6,sd=0.3),10,6)
> M[1,1:3] <- M[1,1:3] + 2
> design <- cbind(First3Arrays=c(1,1,1,0,0,0),Last3Arrays=c(0,0,0,1,1,1))
> fit <- lm.series(M,design=design)
> contrast.matrix <- cbind(First3=c(1,0),Last3=c(0,1),"Last3-First3"=c(-1,1))
> fit2 <- contrasts.fit(fit,contrasts=contrast.matrix)
> eb <- ebayes(fit2)
> 
> eb$t
       
             First3      Last3 Last3-First3
   [1,] 13.01360810  0.8094614  -8.62963489
   [2,] -0.08220793 -0.2496031  -0.11836624
   [3,]  0.53689924  0.1037124  -0.30630936
   [4,] -0.64950290 -0.6643004  -0.01046340
   [5,] -0.12967606 -0.6044961  -0.33574846
   [6,]  1.00443329  0.1749033  -0.58656627
   [7,] -0.41799559 -0.3567558   0.04330306
   [8,]  0.04763415  1.7686344   1.21693097
   [9,] -1.82026162  0.6205108   1.72588671
  [10,] -1.66163020  2.0938216   2.65550546
> eb$s2.prior
[1] 0.07549435
> eb$s2.post
 [1] 0.07549435 0.07549435 0.07549435 0.07549435 0.07549435 0.07549435
 [7] 0.07549435 0.07549435 0.07549435 0.07549435
> eb$df.prior
[1] Inf
> eb$lods
       
           First3     Last3 Last3-First3
   [1,] 76.894615 -4.836703    29.863710
   [2,] -7.551544 -5.007910    -7.137158
   [3,] -7.411171 -5.022793    -7.097495
   [4,] -7.344554 -4.898476    -7.144066
   [5,] -7.546529 -4.920386    -7.088102
   [6,] -7.051826 -5.017066    -6.973142
   [7,] -7.467789 -4.989149    -7.143189
   [8,] -7.553783 -4.122674    -6.408184
   [9,] -5.902688 -4.914721    -5.663877
  [10,] -6.178115 -3.760000    -3.639805
> eb$p.value
       
              First3      Last3 Last3-First3
   [1,] 1.023910e-38 0.41824980 6.154813e-18
   [2,] 9.344814e-01 0.80289433 9.057775e-01
   [3,] 5.913372e-01 0.91739759 7.593691e-01
   [4,] 5.160134e-01 0.50649808 9.916516e-01
   [5,] 8.968227e-01 0.54551387 7.370606e-01
   [6,] 3.151698e-01 0.86115561 5.574950e-01
   [7,] 6.759503e-01 0.72127462 9.654600e-01
   [8,] 9.620078e-01 0.07695490 2.236305e-01
   [9,] 6.871917e-02 0.53492156 8.436780e-02
  [10,] 9.658694e-02 0.03627587 7.918965e-03
> eb$var.prior
[1] 123.7528665   0.4556155 108.4630118
> 
> ### toptable
> 
> toptable(fit)
              M           t      P.Value         B
1   2.064402265 13.01360810 1.023910e-37 76.894615
9  -0.288755599 -1.82026162 6.184726e-01 -5.902688
10 -0.263591244 -1.66163020 7.726955e-01 -6.178115
6   0.159337391  1.00443329 1.000000e+00 -7.051826
4  -0.103033320 -0.64950290 1.000000e+00 -7.344554
3   0.085170539  0.53689924 1.000000e+00 -7.411171
7  -0.066308362 -0.41799559 1.000000e+00 -7.467789
5  -0.020571048 -0.12967606 1.000000e+00 -7.546529
2  -0.013040982 -0.08220793 1.000000e+00 -7.551544
8   0.007556402  0.04763415 1.000000e+00 -7.553783
> 
> ### duplicateCorrelation
> 
> cor.out <- duplicateCorrelation(M)
Loading required package: statmod 

Attaching package 'statmod':


	The following object(s) are masked from package:limma :

	 matvec vecmat 

> cor.out$consensus.correlation
[1] -0.1300222
> cor.out$all.correlations
[1] -0.3360831 -0.3389238  0.1312570 -0.6616356  0.6122000
> 
> ### gls.series
> 
> fit <- gls.series(M,design,correlation=cor.out$cor)
> fit$coefficients
     First3Arrays Last3Arrays
[1,]   1.02568064  0.04440632
[2,]  -0.00893139 -0.04446419
[3,]   0.06938317 -0.03407404
[4,]  -0.02937598  0.11198606
[5,]  -0.27617342  0.21529287
> fit$stdev.unscaled
     First3Arrays Last3Arrays
[1,]    0.3807838   0.3807838
[2,]    0.3807838   0.3807838
[3,]    0.3807838   0.3807838
[4,]    0.3807838   0.3807838
[5,]    0.3807838   0.3807838
> fit$sigma
[1] 0.7880432 0.2880540 0.1997484 0.2750895 0.2621346
> fit$df.residual
[1] 10 10 10 10 10
> 
> ### rlm.series
> 
> fit <- mrlm(M,design)
> fit$coef
              [,1]        [,2]
 [1,]  2.064402265  0.23453509
 [2,] -0.013040982 -0.15267834
 [3,] -0.030835828  0.01645232
 [4,] -0.103033320 -0.10538070
 [5,] -0.020571048 -0.09589370
 [6,]  0.159337391  0.02774563
 [7,] -0.066308362 -0.05659364
 [8,]  0.007556402  0.38166839
 [9,] -0.288755599  0.09843418
[10,] -0.263591244  0.33215155
> fit$stdev.unscaled
           [,1]      [,2]
 [1,] 0.5773503 0.7315593
 [2,] 0.5773503 0.6511403
 [3,] 0.6269590 0.5773503
 [4,] 0.5773503 0.5773503
 [5,] 0.5773503 0.5773503
 [6,] 0.5773503 0.5773503
 [7,] 0.5773503 0.5773503
 [8,] 0.5773503 0.6527609
 [9,] 0.5773503 0.5773503
[10,] 0.5773503 0.5773503
> fit$sigma
 [1] 0.0755165 0.1410025 0.3087025 0.1390960 0.3289335 0.1719261 0.4295126
 [8] 0.1197697 0.3906706 0.2267115
> fit$df.residual
 [1] 4 4 4 4 4 4 4 4 4 4
> 
> # Similar to Mette Langaas 19 May 2004
> set.seed(123)
> narrays <- 9
> ngenes <- 5
> mu <- 0
> alpha <- 2
> beta <- -2
> epsilon <- matrix(rnorm(narrays*ngenes,0,1),ncol=narrays)
> X <- cbind(rep(1,9),c(0,0,0,1,1,1,0,0,0),c(0,0,0,0,0,0,1,1,1))
> dimnames(X) <- list(1:9,c("mu","alpha","beta"))
> yvec <- mu*X[,1]+alpha*X[,2]+beta*X[,3]
> ymat <- matrix(rep(yvec,ngenes),ncol=narrays,byrow=T)+epsilon
> ymat[5,1:2] <- NA
> fit <- lmFit(ymat,design=X)
> test.contr <- cbind(c(0,1,-1),c(1,1,0),c(1,0,1))
> dimnames(test.contr) <- list(1:3,c("alpha-beta","mu+alpha","mu+beta"))
> fit2 <- contrasts.fit(fit,contrasts=test.contr)
> eBayes(fit2)
An object of class "MArrayLM"
$coefficients
      
       alpha-beta mu+alpha   mu+beta
  [1,]   3.537333 1.677465 -1.859868
  [2,]   4.355578 2.372554 -1.983024
  [3,]   3.197645 1.053584 -2.144061
  [4,]   2.697734 1.611443 -1.086291
  [5,]   3.502304 2.051995 -1.450309

$stdev.unscaled
     alpha-beta  mu+alpha   mu+beta
[1,]  0.8164966 0.5773503 0.5773503
[2,]  0.8164966 0.5773503 0.5773503
[3,]  0.8164966 0.5773503 0.5773503
[4,]  0.8164966 0.5773503 0.5773503
[5,]  1.1547005 0.8368633 0.8368633

$sigma
[1] 1.3425032 0.4647155 1.1993444 0.9428569 0.9421509

$df.residual
[1] 6 6 6 6 4

$cov.coefficients
            
             alpha-beta      mu+alpha       mu+beta
  alpha-beta  0.6666667  3.333333e-01 -3.333333e-01
  mu+alpha    0.3333333  3.333333e-01 -1.821460e-17
  mu+beta    -0.3333333 -1.821460e-17  3.333333e-01

$method
[1] "ls"

$design
  mu alpha beta
1  1     0    0
2  1     0    0
3  1     0    0
4  1     1    0
5  1     1    0
6  1     1    0
7  1     0    1
8  1     0    1
9  1     0    1

$contrasts
  alpha-beta mu+alpha mu+beta
1          0        1       1
2          1        1       0
3         -1        0       1

$df.prior
[1] 9.306153

$s2.prior
[1] 0.923179

$var.prior
[1] 17.33142 17.33142 12.26855

$proportion
[1] 0.01

$s2.post
[1] 1.2677996 0.6459499 1.1251558 0.9097727 0.9124980

$t
      
       alpha-beta mu+alpha   mu+beta
  [1,]   3.847656 2.580411 -2.860996
  [2,]   6.637308 5.113018 -4.273553
  [3,]   3.692066 1.720376 -3.500994
  [4,]   3.464003 2.926234 -1.972606
  [5,]   3.175181 2.566881 -1.814221

$p.value
      
         alpha-beta     mu+alpha      mu+beta
  [1,] 1.529450e-03 0.0206493481 0.0117123495
  [2,] 7.144893e-06 0.0001195844 0.0006385076
  [3,] 2.109270e-03 0.1055117477 0.0031325769
  [4,] 3.381970e-03 0.0102514264 0.0668844448
  [5,] 7.124839e-03 0.0230888584 0.0922478630

$lods
     alpha-beta  mu+alpha    mu+beta
[1,]  -1.013417 -3.702133 -3.0332393
[2,]   3.981496  1.283349 -0.2615911
[3,]  -1.315036 -5.168621 -1.7864101
[4,]  -1.757103 -3.043209 -4.6191869
[5,]  -2.257358 -3.478267 -4.5683738

$F
[1]  7.421911 22.203107  7.608327  6.227010  5.060579

$F.p.value
[1] 5.581800e-03 2.988923e-05 5.080726e-03 1.050148e-02 2.320274e-02
attr(,"df1")
[1] 2
attr(,"df2")
[1] 15.30615 15.30615 15.30615 15.30615 13.30615

> 
> ### uniquegenelist
> 
> uniquegenelist(letters[1:8],ndups=2)
[1] "a" "c" "e" "g"
> uniquegenelist(letters[1:8],ndups=2,spacing=2)
[1] "a" "b" "e" "f"
> 
> ### classifyTests
> 
> tstat <- matrix(c(0,5,0, 0,2.5,0, -2,-2,2, 1,1,1), 4, 3, byrow=TRUE)
> classifyTestsF(tstat)
TestResults matrix
     [,1] [,2] [,3]
[1,]    0    1    0
[2,]    0    0    0
[3,]   -1   -1    1
[4,]    0    0    0
> FStat(tstat)
[1] 8.333333 2.083333 4.000000 1.000000
attr(,"df1")
[1] 3
attr(,"df2")
[1] Inf
> classifyTestsT(tstat)
TestResults matrix
     [,1] [,2] [,3]
[1,]    0    1    0
[2,]    0    0    0
[3,]    0    0    0
[4,]    0    0    0
> classifyTestsP(tstat)
TestResults matrix
     [,1] [,2] [,3]
[1,]    0    1    0
[2,]    0    1    0
[3,]    0    0    0
[4,]    0    0    0
> 
